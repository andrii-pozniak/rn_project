{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport * as Font from 'expo-font';\nimport { LoginScreen } from \"./Screens/LoginScreen/LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialPerson = {\n  login: '',\n  email: '',\n  password: ''\n};\nvar customFonts = {\n  'Roboto-Black': require(\"./assets/fonts/Roboto-Black.ttf\"),\n  'Roboto-Bold': require(\"./assets/fonts/Roboto-Bold.ttf\"),\n  'Roboto-Regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n  'Roboto-Medium': require(\"./assets/fonts/Roboto-Medium.ttf\")\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  var addPerson = function addPerson(_ref) {\n    var login = _ref.login,\n      email = _ref.email,\n      password = _ref.password;\n    var NewRegistration = {\n      login: login,\n      email: email,\n      password: password\n    };\n    setPerson(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        addPerson: addPerson\n      });\n    });\n  };\n  var keyboardHide = function keyboardHide() {\n    setIsKeyboard(false);\n    Keyboard.dismiss();\n    setPerson(initialPerson);\n  };\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      return yield Font.loadAsync(customFonts);\n    })();\n    setFontsLoaded(true);\n  }, []);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: require(\"./assets/images/photo_bg.jpg\"),\n        style: styles.image,\n        children: _jsx(LoginScreen, {})\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: \"flex-end\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","ImageBackground","Keyboard","TouchableWithoutFeedback","Font","LoginScreen","jsx","_jsx","initialPerson","login","email","password","customFonts","require","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","addPerson","_ref","NewRegistration","setPerson","prevState","_objectSpread","keyboardHide","setIsKeyboard","dismiss","_asyncToGenerator","loadAsync","onPress","children","style","styles","container","source","image","create","flex","backgroundColor","resizeMode","justifyContent"],"sources":["/home/sindory/Desktop/rn_project/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet, View,\n  ImageBackground,\n  Keyboard,\n  TouchableWithoutFeedback\n\n} from 'react-native';\nimport * as Font from 'expo-font';\n// import { RegistrationScreen } from \"./Screens/RegistrationScreen/RegistrationScreen\";\nimport { LoginScreen } from \"./Screens/LoginScreen/LoginScreen\";\n\nconst initialPerson = {\n  login: '',\n  email: '',\n  password: ''\n}\nlet customFonts = {\n  'Roboto-Black': require('./assets/fonts/Roboto-Black.ttf'),\n  'Roboto-Bold': require('./assets/fonts/Roboto-Bold.ttf'),\n  'Roboto-Regular': require('./assets/fonts/Roboto-Regular.ttf'),\n  'Roboto-Medium': require('./assets/fonts/Roboto-Medium.ttf'),\n \n};\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] =useState(false)\n\n  const addPerson = ({ login, email, password }) => {\n    const NewRegistration = {\n      login: login,\n      email: email,\n      password: password,\n    }\n\n    setPerson((prevState) => ({ ...prevState, addPerson }))\n   \n  }\n\n  const keyboardHide = () => {\n    setIsKeyboard(false);\n    Keyboard.dismiss();\n    setPerson(initialPerson)\n  }\n  useEffect(() => {\n    (async () => await Font.loadAsync(customFonts))();\n    setFontsLoaded(true)\n     }, [])\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  \n  return (\n    <TouchableWithoutFeedback onPress={keyboardHide}>\n      <View style={styles.container}>\n        <ImageBackground source={require(\"./assets/images/photo_bg.jpg\")} style={styles.image}>\n\n          {/* <RegistrationScreen />          */}\n\n          <LoginScreen />\n        </ImageBackground>\n      </View>\n    </TouchableWithoutFeedback>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: \"flex-end\"\n  },\n\n});\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,wBAAA;AAQnD,OAAO,KAAKC,IAAI,MAAM,WAAW;AAEjC,SAASC,WAAW;AAA4C,SAAAC,GAAA,IAAAC,IAAA;AAEhE,IAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AACD,IAAIC,WAAW,GAAG;EAChB,cAAc,EAAEC,OAAO,mCAAmC;EAC1D,aAAa,EAAEA,OAAO,kCAAkC;EACxD,gBAAgB,EAAEA,OAAO,qCAAqC;EAC9D,eAAe,EAAEA,OAAO;AAE1B,CAAC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAqClB,QAAQ,CAAC,KAAK,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElC,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAmC;IAAA,IAA7BZ,KAAK,GAAAY,IAAA,CAALZ,KAAK;MAAEC,KAAK,GAAAW,IAAA,CAALX,KAAK;MAAEC,QAAQ,GAAAU,IAAA,CAARV,QAAQ;IACzC,IAAMW,eAAe,GAAG;MACtBb,KAAK,EAAEA,KAAK;MACZC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;IAEDY,SAAS,CAAC,UAACC,SAAS;MAAA,OAAAC,aAAA,CAAAA,aAAA,KAAWD,SAAS;QAAEJ,SAAS,EAATA;MAAS;IAAA,CAAG,CAAC;EAEzD,CAAC;EAED,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBC,aAAa,CAAC,KAAK,CAAC;IACpBzB,QAAQ,CAAC0B,OAAO,EAAE;IAClBL,SAAS,CAACf,aAAa,CAAC;EAC1B,CAAC;EACDV,SAAS,CAAC,YAAM;IACd+B,iBAAA,CAAC;MAAA,aAAkBzB,IAAI,CAAC0B,SAAS,CAAClB,WAAW,CAAC;IAAA,IAAG;IACjDO,cAAc,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAET,IAAI,CAACD,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEX,IAAA,CAACJ,wBAAwB;IAAC4B,OAAO,EAAEL,YAAa;IAAAM,QAAA,EAC9CzB,IAAA,CAACP,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,EAC5BzB,IAAA,CAACN,eAAe;QAACmC,MAAM,EAAEvB,OAAO,gCAAiC;QAACoB,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAL,QAAA,EAIpFzB,IAAA,CAACF,WAAW;MAAG;IACC;EACb,EACkB;AAG/B;AAEA,IAAM6B,MAAM,GAAGnC,UAAU,CAACuC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EAEDH,KAAK,EAAE;IACLE,IAAI,EAAE,CAAC;IACPE,UAAU,EAAE,OAAO;IACnBC,cAAc,EAAE;EAClB;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}