{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  login: '',\n  email: ''\n};\nexport var LoginScreen = function LoginScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isKeyboard = _useState2[0],\n    setIsKeyboard = _useState2[1];\n  var _useState3 = useState(initialState),\n    _useState4 = _slicedToArray(_useState3, 2),\n    state = _useState4[0],\n    setState = _useState4[1];\n  var keyboardHide = function keyboardHide() {\n    setIsKeyboard(false);\n    Keyboard.dismiss();\n    setState(initialState);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    children: _jsxs(View, {\n      style: styles.LoginScreenForm,\n      children: [_jsx(Text, {\n        style: styles.titleForm,\n        children: \"Enter\"\n      }), _jsx(KeyboardAvoidingView, {\n        behavior: null,\n        children: _jsxs(View, {\n          style: {\n            marginBottom: isKeyboard ? 16 : 132\n          },\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            onFocus: function onFocus() {\n              return setIsKeyboard(true);\n            },\n            value: state.login,\n            onChangeText: function onChangeText(value) {\n              return setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  login: value\n                });\n              });\n            },\n            placeholder: \"Login\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onFocus: function onFocus() {\n              return setIsKeyboard(true);\n            },\n            value: state.email,\n            onChangeText: function onChangeText(value) {\n              return setState(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  email: value\n                });\n              });\n            },\n            placeholder: \"Email\"\n          }), _jsx(TouchableOpacity, {\n            activeOpacity: 0.5,\n            style: styles.btn,\n            onPress: keyboardHide,\n            children: _jsx(Text, {\n              style: styles.titleBtn,\n              children: \"Enter\"\n            })\n          }), _jsx(Text, {\n            style: styles.textMessage,\n            children: \"Don't have an account? Register\"\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.indicator\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  titleForm: {\n    textAlign: 'center',\n    marginTop: 92,\n    fontSize: 30,\n    fontWeight: 500,\n    fontFamily: 'Roboto-Regular',\n    marginBottom: 33\n  },\n  LoginScreenForm: {\n    position: 'absolute',\n    width: '100%',\n    height: 490,\n    justifyContent: 'flex-end',\n    borderTopLeftRadius: 25,\n    borderTopRightRadius: 25,\n    backgroundColor: '#FFFFFF',\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 51,\n    backgroundColor: '#FF6C00',\n    borderRadius: 100,\n    marginBottom: 16\n  },\n  titleBtn: {\n    fontWeight: 400,\n    fontSize: 16,\n    lineHeight: 19,\n    fontFamily: 'Roboto-Regular',\n    color: '#FFFFFF'\n  },\n  textMessage: {\n    fontWeight: 400,\n    fontSize: 16,\n    lineHeight: 19,\n    textAlign: 'center',\n    color: '#1B4371',\n    fontFamily: 'Roboto-Regular'\n  },\n  indicator: {\n    width: 134,\n    height: 5,\n    backgroundColor: '#212121',\n    borderRadius: 100,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 7\n  },\n  input: {\n    height: 50,\n    marginBottom: 16,\n    backgroundColor: '#F6F6F6',\n    borderColor: '#E8E8E8',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 16,\n    color: '#212121'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TouchableOpacity","KeyboardAvoidingView","Keyboard","TouchableWithoutFeedback","TextInput","jsx","_jsx","jsxs","_jsxs","initialState","login","email","LoginScreen","_useState","_useState2","_slicedToArray","isKeyboard","setIsKeyboard","_useState3","_useState4","state","setState","keyboardHide","dismiss","onPress","children","style","styles","LoginScreenForm","titleForm","behavior","marginBottom","input","onFocus","value","onChangeText","prevState","_objectSpread","placeholder","activeOpacity","btn","titleBtn","textMessage","indicator","create","textAlign","marginTop","fontSize","fontWeight","fontFamily","position","width","height","justifyContent","borderTopLeftRadius","borderTopRightRadius","backgroundColor","paddingLeft","paddingRight","alignItems","borderRadius","lineHeight","color","marginLeft","marginRight","borderColor","borderWidth","padding"],"sources":["/home/sindory/Desktop/rn_project/Screens/Auth/LoginScreen/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableOpacity,\n    KeyboardAvoidingView,\n    Keyboard,\n    TouchableWithoutFeedback,\n    TextInput\n\n} from 'react-native';\n\nconst initialState = {\n    login: '',\n    email: '',\n\n}\n\nexport const LoginScreen = () => {\n    const [isKeyboard, setIsKeyboard] = useState(false)\n    const [state, setState] = useState(initialState)\n    const keyboardHide = () => {\n        setIsKeyboard(false);\n        Keyboard.dismiss();\n        setState(initialState)\n    }\n    return (\n        <TouchableWithoutFeedback onPress={keyboardHide}>\n            <View style={styles.LoginScreenForm}>\n                <Text style={styles.titleForm}>Enter</Text>\n                <KeyboardAvoidingView\n                    behavior={null}>\n                    <View style={{ marginBottom: isKeyboard ? 16 : 132 }}>\n                        <TextInput\n                            style={styles.input}\n                            onFocus={() => setIsKeyboard(true)}\n                            value={state.login}\n                            onChangeText={(value) =>\n                                setState((prevState) => ({ ...prevState, login: value }))}\n                            placeholder=\"Login\"\n                        />\n                        <TextInput\n                            style={styles.input}\n                            onFocus={() => setIsKeyboard(true)}\n                            value={state.email}\n                            onChangeText={(value) => setState((prevState) => ({ ...prevState, email: value }))}\n                            placeholder=\"Email\"\n                        />\n\n                        <TouchableOpacity activeOpacity={0.5}\n                            style={styles.btn} onPress={keyboardHide}>\n                            <Text style={styles.titleBtn}>Enter</Text>\n                        </TouchableOpacity>\n                        <Text style={styles.textMessage}>Don't have an account? Register</Text>\n                    </View>\n                </KeyboardAvoidingView>\n                <View style={styles.indicator}></View>\n            </View>\n        </TouchableWithoutFeedback>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n\n    titleForm: {\n        textAlign: 'center',\n        marginTop: 92,\n        fontSize: 30,\n        fontWeight: 500,\n        fontFamily: 'Roboto-Regular',\n        marginBottom: 33,\n    },\n\n    LoginScreenForm: {\n        position: 'absolute',\n        width: '100%',\n        height: 490,\n        justifyContent: 'flex-end',\n        borderTopLeftRadius: 25,\n        borderTopRightRadius: 25,\n        backgroundColor: '#FFFFFF',\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n\n    btn: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 51,\n        backgroundColor: '#FF6C00',\n        borderRadius: 100,\n        marginBottom: 16,\n    },\n    titleBtn: {\n        fontWeight: 400,\n        fontSize: 16,\n        lineHeight: 19,\n        fontFamily: 'Roboto-Regular',\n        color: '#FFFFFF',\n    },\n    textMessage: {\n        fontWeight: 400,\n        fontSize: 16,\n        lineHeight: 19,\n        textAlign: 'center',\n        color: '#1B4371',\n        fontFamily: 'Roboto-Regular',\n        // marginBottom: 132,\n    },\n    indicator: {\n\n        width: 134,\n        height: 5,\n        backgroundColor: '#212121',\n        borderRadius: 100,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginBottom: 7,\n    },\n    input: {\n        height: 50,\n        marginBottom: 16,\n        backgroundColor: '#F6F6F6',\n        borderColor: '#E8E8E8',\n        borderWidth: 1,\n        borderRadius: 8,\n        padding: 16,\n        color: '#212121',\n    },\n\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}