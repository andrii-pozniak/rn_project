{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport * as Font from 'expo-font';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { RegistrationScreen } from \"./Screens/Auth/RegistrationScreen/RegistrationScreen\";\nimport { LoginScreen } from \"./Screens/Auth/LoginScreen/LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createNativeStackNavigator();\nvar customFonts = {\n  'Roboto-Black': require(\"./assets/fonts/Roboto-Black.ttf\"),\n  'Roboto-Bold': require(\"./assets/fonts/Roboto-Bold.ttf\"),\n  'Roboto-Regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n  'Roboto-Medium': require(\"./assets/fonts/Roboto-Medium.ttf\")\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      return yield Font.loadAsync(customFonts);\n    })();\n    setFontsLoaded(true);\n  }, []);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(AuthStack.Navigator, {\n      children: [_jsx(AuthStack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(AuthStack.Screen, {\n        name: \"Register\",\n        component: RegistrationScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","ImageBackground","Keyboard","TouchableWithoutFeedback","Font","NavigationContainer","createNativeStackNavigator","RegistrationScreen","LoginScreen","jsx","_jsx","jsxs","_jsxs","AuthStack","customFonts","require","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","_asyncToGenerator","loadAsync","children","Navigator","Screen","name","component"],"sources":["/home/sindory/Desktop/rn_project/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet, View,\n  ImageBackground,\n  Keyboard,\n  TouchableWithoutFeedback\n\n} from 'react-native';\nimport * as Font from 'expo-font';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { RegistrationScreen } from \"./Screens/Auth/RegistrationScreen/RegistrationScreen\";\nimport { LoginScreen } from \"./Screens/Auth/LoginScreen/LoginScreen\";\n\nconst AuthStack = createNativeStackNavigator();\n\nlet customFonts = {\n  'Roboto-Black': require('./assets/fonts/Roboto-Black.ttf'),\n  'Roboto-Bold': require('./assets/fonts/Roboto-Bold.ttf'),\n  'Roboto-Regular': require('./assets/fonts/Roboto-Regular.ttf'),\n  'Roboto-Medium': require('./assets/fonts/Roboto-Medium.ttf'),\n\n};\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false)\n\n  \n  \n  useEffect(() => {\n    (async () => await Font.loadAsync(customFonts))();\n    setFontsLoaded(true)\n  }, [])\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n   <NavigationContainer>\n    <AuthStack.Navigator>\n      <AuthStack.Screen name='Login' component={LoginScreen}/>\n      <AuthStack.Screen name='Register' component={RegistrationScreen}/>\n    </AuthStack.Navigator>\n   </NavigationContainer>\n  );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,wBAAA;AAQnD,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,kBAAkB;AAC3B,SAASC,WAAW;AAAiD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,SAAS,GAAGP,0BAA0B,EAAE;AAE9C,IAAIQ,WAAW,GAAG;EAChB,cAAc,EAAEC,OAAO,mCAAmC;EAC1D,aAAa,EAAEA,OAAO,kCAAkC;EACxD,gBAAgB,EAAEA,OAAO,qCAAqC;EAC9D,eAAe,EAAEA,OAAO;AAE1B,CAAC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsCpB,QAAQ,CAAC,KAAK,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAIlCpB,SAAS,CAAC,YAAM;IACdwB,iBAAA,CAAC;MAAA,aAAkBlB,IAAI,CAACmB,SAAS,CAACT,WAAW,CAAC;IAAA,IAAG;IACjDO,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACD,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACCV,IAAA,CAACL,mBAAmB;IAAAmB,QAAA,EACnBZ,KAAA,CAACC,SAAS,CAACY,SAAS;MAAAD,QAAA,GAClBd,IAAA,CAACG,SAAS,CAACa,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEpB;MAAY,EAAE,EACxDE,IAAA,CAACG,SAAS,CAACa,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAErB;MAAmB,EAAE;IAAA;EAC9C,EACD;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}